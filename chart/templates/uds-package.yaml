# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

apiVersion: uds.dev/v1alpha1
kind: Package
metadata:
  name: artifactory
  namespace: {{ .Release.Namespace }}
spec:
  {{- if .Values.sso }}
  sso:
    - name: Artifactory Login
      clientId: uds-package-artifactory
      redirectUris:
        - "https://artifactory.{{ .Values.domain }}/*"
      defaultClientScopes:
      {{- if .Values.sso.defaultClientScopes }}
        {{- range .Values.sso.defaultClientScopes }}
          - "{{ . }}"
        {{- end }}
      {{- end }}
      groups:
        anyOf:
        {{- if .Values.sso.requiredGroups }}
          {{- range .Values.sso.requiredGroups }}
            - "{{ . }}"
          {{- end }}
        {{- end }}
      secretName: artifactory-keycloak-client
      secretTemplate:
        artifactory_client_id: "clientField(clientId)"
        artifactory_client_secret: "clientField(secret)"
        keycloak_auth_url: "https://sso.{{ .Values.domain }}/realms/uds/protocol/openid-connect/auth"
        keycloak_token_url: "https://sso.{{ .Values.domain }}/realms/uds/protocol/openid-connect/token"
        keycloak_api_url: "https://sso.{{ .Values.domain }}/realms/uds/protocol/openid-connect/userinfo"
  {{- end }}
  network:
    serviceMesh:
      mode: ambient
    expose:
      - service: artifactory
        podLabels:
          app: artifactory
        gateway: tenant
        host: artifactory
        port: 8082
    allow:
      - direction: Ingress
        remoteGenerated: IntraNamespace

      - direction: Ingress
        selector:
          app: artifactory
        remoteNamespace: monitoring
        remoteSelector:
          app.kubernetes.io/name: prometheus
        ports:
          - 8082
        description: "Prometheus Metrics"

      - direction: Egress
        remoteGenerated: IntraNamespace

      - direction: Egress
        remoteGenerated: Anywhere
        podLabels:
          app: artifactory
        port: 443
        description: "SSO"

      - direction: Egress
        remoteGenerated: KubeAPI

      - direction: Egress
        selector:
          app: artifactory
        {{- if .Values.postgres.internal }}
        remoteNamespace: {{ .Values.postgres.namespace | quote }}
        remoteSelector:
          {{ .Values.postgres.selector | toYaml | nindent 10 }}
        {{- else }}
        port: {{ .Values.postgres.port }}
        remoteGenerated: Anywhere
        {{- end }}
        description: "Postgres"

      # Custom rules for unanticipated scenarios
      {{- range .Values.customNetworkPolicies }}
      - direction: {{ .direction }}
        selector:
          {{ .selector | toYaml | nindent 10 }}
        {{- if not .remoteGenerated }}
        remoteNamespace: {{ .remoteNamespace }}
        remoteSelector:
          {{ .remoteSelector | toYaml | nindent 10 }}
        port: {{ .port }}
        {{- else }}
        remoteGenerated: {{ .remoteGenerated }}
        {{- end }}
        description: {{ .description }}
      {{- end }}
